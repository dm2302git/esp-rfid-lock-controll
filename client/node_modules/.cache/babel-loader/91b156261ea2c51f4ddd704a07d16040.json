{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ShowContextProvider, useCheckMinimumRequiredProps, useShowController } from 'ra-core';\nimport { ShowView } from './ShowView';\n/**\n * Page component for the Show view\n *\n * The `<Show>` component renders the page title and actions,\n * fetches the record from the data provider.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleShowLayout>`),\n * to which it passes pass the `record` as prop.\n *\n * The <Show> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = (props) => (\n *     <Show {...props}>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n * export default App;\n */\n\nexport var Show = function (props) {\n  useCheckMinimumRequiredProps('Show', ['children'], props);\n  var controllerProps = useShowController(props);\n  return React.createElement(ShowContextProvider, {\n    value: controllerProps\n  }, React.createElement(ShowView, __assign({}, props, controllerProps)));\n};\nShow.propTypes = {\n  actions: PropTypes.element,\n  aside: PropTypes.element,\n  children: PropTypes.element,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  hasCreate: PropTypes.bool,\n  hasEdit: PropTypes.bool,\n  hasList: PropTypes.bool,\n  hasShow: PropTypes.bool,\n  id: PropTypes.any.isRequired,\n  resource: PropTypes.string.isRequired,\n  title: PropTypes.node\n};","map":{"version":3,"sources":["C:/Users/Schwartza/Desktop/prog2020/lock-admin/node_modules/ra-ui-materialui/esm/detail/Show.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","PropTypes","ShowContextProvider","useCheckMinimumRequiredProps","useShowController","ShowView","Show","props","controllerProps","createElement","value","propTypes","actions","element","aside","children","classes","object","className","string","hasCreate","bool","hasEdit","hasList","hasShow","id","any","isRequired","resource","title","node"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,EAA8BC,4BAA9B,EAA4DC,iBAA5D,QAAsF,SAAtF;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,IAAI,GAAG,UAAUC,KAAV,EAAiB;AAC/BJ,EAAAA,4BAA4B,CAAC,MAAD,EAAS,CAAC,UAAD,CAAT,EAAuBI,KAAvB,CAA5B;AACA,MAAIC,eAAe,GAAGJ,iBAAiB,CAACG,KAAD,CAAvC;AACA,SAAQP,KAAK,CAACS,aAAN,CAAoBP,mBAApB,EAAyC;AAAEQ,IAAAA,KAAK,EAAEF;AAAT,GAAzC,EACJR,KAAK,CAACS,aAAN,CAAoBJ,QAApB,EAA8BnB,QAAQ,CAAC,EAAD,EAAKqB,KAAL,EAAYC,eAAZ,CAAtC,CADI,CAAR;AAEH,CALM;AAMPF,IAAI,CAACK,SAAL,GAAiB;AACbC,EAAAA,OAAO,EAAEX,SAAS,CAACY,OADN;AAEbC,EAAAA,KAAK,EAAEb,SAAS,CAACY,OAFJ;AAGbE,EAAAA,QAAQ,EAAEd,SAAS,CAACY,OAHP;AAIbG,EAAAA,OAAO,EAAEf,SAAS,CAACgB,MAJN;AAKbC,EAAAA,SAAS,EAAEjB,SAAS,CAACkB,MALR;AAMbC,EAAAA,SAAS,EAAEnB,SAAS,CAACoB,IANR;AAObC,EAAAA,OAAO,EAAErB,SAAS,CAACoB,IAPN;AAQbE,EAAAA,OAAO,EAAEtB,SAAS,CAACoB,IARN;AASbG,EAAAA,OAAO,EAAEvB,SAAS,CAACoB,IATN;AAUbI,EAAAA,EAAE,EAAExB,SAAS,CAACyB,GAAV,CAAcC,UAVL;AAWbC,EAAAA,QAAQ,EAAE3B,SAAS,CAACkB,MAAV,CAAiBQ,UAXd;AAYbE,EAAAA,KAAK,EAAE5B,SAAS,CAAC6B;AAZJ,CAAjB","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ShowContextProvider, useCheckMinimumRequiredProps, useShowController, } from 'ra-core';\nimport { ShowView } from './ShowView';\n/**\n * Page component for the Show view\n *\n * The `<Show>` component renders the page title and actions,\n * fetches the record from the data provider.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleShowLayout>`),\n * to which it passes pass the `record` as prop.\n *\n * The <Show> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = (props) => (\n *     <Show {...props}>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n * export default App;\n */\nexport var Show = function (props) {\n    useCheckMinimumRequiredProps('Show', ['children'], props);\n    var controllerProps = useShowController(props);\n    return (React.createElement(ShowContextProvider, { value: controllerProps },\n        React.createElement(ShowView, __assign({}, props, controllerProps))));\n};\nShow.propTypes = {\n    actions: PropTypes.element,\n    aside: PropTypes.element,\n    children: PropTypes.element,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasList: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    id: PropTypes.any.isRequired,\n    resource: PropTypes.string.isRequired,\n    title: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}