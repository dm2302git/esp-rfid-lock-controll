{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the result of the useCreateController() hook.\n *\n * Use the useCreateContext() hook to read the context. That's what the Create components do in react-admin.\n *\n * @example\n *\n * import { useCreateController, CreateContextProvider } from 'ra-core';\n *\n * const Create = props => {\n *     const controllerProps = useCreateController(props);\n *     return (\n *         <CreateContextProvider value={controllerProps}>\n *             ...\n *         </CreateContextProvider>\n *     );\n * };\n */\n\nexport var CreateContext = createContext({\n  basePath: null,\n  record: null,\n  defaultTitle: null,\n  loaded: null,\n  loading: null,\n  redirect: null,\n  setOnFailure: null,\n  setOnSuccess: null,\n  setTransform: null,\n  resource: null,\n  save: null,\n  saving: null,\n  successMessage: null,\n  version: null\n});\nCreateContext.displayName = 'CreateContext';","map":{"version":3,"sources":["C:/Users/Schwartza/Desktop/prog2020/lock-admin/node_modules/ra-core/esm/controller/details/CreateContext.js"],"names":["createContext","CreateContext","basePath","record","defaultTitle","loaded","loading","redirect","setOnFailure","setOnSuccess","setTransform","resource","save","saving","successMessage","version","displayName"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,aAAa,GAAGD,aAAa,CAAC;AACrCE,EAAAA,QAAQ,EAAE,IAD2B;AAErCC,EAAAA,MAAM,EAAE,IAF6B;AAGrCC,EAAAA,YAAY,EAAE,IAHuB;AAIrCC,EAAAA,MAAM,EAAE,IAJ6B;AAKrCC,EAAAA,OAAO,EAAE,IAL4B;AAMrCC,EAAAA,QAAQ,EAAE,IAN2B;AAOrCC,EAAAA,YAAY,EAAE,IAPuB;AAQrCC,EAAAA,YAAY,EAAE,IARuB;AASrCC,EAAAA,YAAY,EAAE,IATuB;AAUrCC,EAAAA,QAAQ,EAAE,IAV2B;AAWrCC,EAAAA,IAAI,EAAE,IAX+B;AAYrCC,EAAAA,MAAM,EAAE,IAZ6B;AAarCC,EAAAA,cAAc,EAAE,IAbqB;AAcrCC,EAAAA,OAAO,EAAE;AAd4B,CAAD,CAAjC;AAgBPd,aAAa,CAACe,WAAd,GAA4B,eAA5B","sourcesContent":["import { createContext } from 'react';\n/**\n * Context to store the result of the useCreateController() hook.\n *\n * Use the useCreateContext() hook to read the context. That's what the Create components do in react-admin.\n *\n * @example\n *\n * import { useCreateController, CreateContextProvider } from 'ra-core';\n *\n * const Create = props => {\n *     const controllerProps = useCreateController(props);\n *     return (\n *         <CreateContextProvider value={controllerProps}>\n *             ...\n *         </CreateContextProvider>\n *     );\n * };\n */\nexport var CreateContext = createContext({\n    basePath: null,\n    record: null,\n    defaultTitle: null,\n    loaded: null,\n    loading: null,\n    redirect: null,\n    setOnFailure: null,\n    setOnSuccess: null,\n    setTransform: null,\n    resource: null,\n    save: null,\n    saving: null,\n    successMessage: null,\n    version: null,\n});\nCreateContext.displayName = 'CreateContext';\n"]},"metadata":{},"sourceType":"module"}