[{"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/index.js":"1","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/App.js":"2","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/reportWebVitals.js":"3","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/key.js":"4","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/KeyCreate.jsx":"5","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/event/EventList.jsx":"6","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/newKey/NewKeyList.jsx":"7","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/reader/ReaderList.jsx":"8","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/access/AccessList.jsx":"9","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/KeyActions.jsx":"10","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/dashboard/index.js":"11","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/AuthProvider.js":"12","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/reader/ReaderShow.jsx":"13","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/KeyShow.jsx":"14","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/reader/QuickCreateBox.jsx":"15"},{"size":572,"mtime":1608134531819,"results":"16","hashOfConfig":"17"},{"size":1120,"mtime":1608216454359,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1608031634838,"results":"19","hashOfConfig":"17"},{"size":1647,"mtime":1608211261382,"results":"20","hashOfConfig":"17"},{"size":791,"mtime":1608031634838,"results":"21","hashOfConfig":"17"},{"size":1008,"mtime":1608031634838,"results":"22","hashOfConfig":"17"},{"size":755,"mtime":1608031634838,"results":"23","hashOfConfig":"17"},{"size":2476,"mtime":1608210089546,"results":"24","hashOfConfig":"17"},{"size":961,"mtime":1608031634838,"results":"25","hashOfConfig":"17"},{"size":1549,"mtime":1608031634838,"results":"26","hashOfConfig":"17"},{"size":145,"mtime":1608122750456,"results":"27","hashOfConfig":"17"},{"size":2320,"mtime":1608136632296,"results":"28","hashOfConfig":"17"},{"size":1440,"mtime":1608220173076,"results":"29","hashOfConfig":"17"},{"size":146,"mtime":1608209835930,"results":"30","hashOfConfig":"17"},{"size":462,"mtime":1608215163660,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"8vagau",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/index.js",[],["73","74"],"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/App.js",[],"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/reportWebVitals.js",[],"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/key.js",["75","76"],"// in posts.js\nimport * as React from \"react\";\nimport { List, Datagrid, Edit, Create, SimpleForm, TextField, DateField, TextInput, DateInput, NumberField, BooleanField, ShowButton } from 'react-admin';\nimport KeyActions from \"./KeyActions\";\n\nexport const KeyList = (props) => (\n    <List {...props} actions={<KeyActions/>}>\n        <Datagrid>\n            <TextField source=\"name\" />\n            <TextField source=\"uid\" />\n            <DateField source=\"validUntil\" showTime locales=\"de\"/>\n            <BooleanField source=\"isOneTimeCode\" />\n        </Datagrid>\n    </List>\n);\n\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const KeyEdit = (props) => (\n    <Edit title={<PostTitle />} {...props}>\n        <SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"title\" />\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\n            <TextInput multiline source=\"body\" />\n            <DateInput label=\"Publication date\" source=\"published_at\" />\n            <TextInput source=\"average_note\" />\n            <TextInput disabled label=\"Nb views\" source=\"views\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const KeyCreate = (props) => (\n    <Create title=\"Create a Post\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"title\" />\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\n            <TextInput multiline source=\"body\" />\n            <TextInput label=\"Publication date\" source=\"published_at\" />\n            <TextInput source=\"average_note\" />\n        </SimpleForm>\n    </Create>\n);","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/KeyCreate.jsx",["77","78","79","80","81","82","83","84"],"// in posts.js\nimport * as React from \"react\";\nimport { List, Datagrid, Edit, Create, SimpleForm, TextField, DateField, TextInput, DateInput, NumberField, BooleanField, BooleanInput, DateTimeInput, ReferenceInput, SelectInput } from 'react-admin';\n\n\n\n\n\nconst KeyCreate = (props) => (\n    <Create title=\"Create a Post\"  {...props} >\n        <SimpleForm>\n            <TextInput source=\"name\" />\n            <TextInput source=\"uid\" />\n            <DateTimeInput source=\"validUntil\" showTime locales=\"de\" />\n            <BooleanInput source=\"isOneTimeCode\" />\n            {<ReferenceInput reference=\"newkey\" source=\"newkey_id\"  allowEmpty {...props}>\n                <SelectInput optionText=\"uid\" />\n            </ReferenceInput>}\n        </SimpleForm>\n    </Create>\n);\n\nexport default KeyCreate","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/event/EventList.jsx",["85","86","87","88","89","90","91"],"import * as React from \"react\";\nimport { List, Datagrid, Edit, Create, SimpleForm, TextField, DateField, TextInput, DateInput, NumberField, BooleanField } from 'react-admin';\n\n\n/* @Column(\"varchar\", { length: 20, nullable: false })\n    type: string;\n\n    @Column(\"varchar\", { nullable: false, length: 20 })\n    src: string;\n\n    @Column(\"varchar\", { nullable: true, length: 40 })\n    description: string;\n\n    @Column(\"varchar\", { nullable: false, length: 20 })\n    data: string;\n\n    @Column(\"timestamp\")\n    time: Date;\n\n    @Column(\"varchar\", { nullable: false, length: 20 })\n    door: string; */\n\n\nexport const EventList = (props) => (\n    <List {...props}>\n        <Datagrid>\n            <TextField source=\"door\" />\n            <TextField source=\"type\" />\n            <TextField source=\"src\" />\n            <TextField source=\"description\" />\n            <TextField source=\"data\" />\n            <DateField source=\"time\" showTime locales=\"de\"/>\n        </Datagrid>\n    </List>\n);\n\nexport default EventList","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/newKey/NewKeyList.jsx",["92","93","94","95","96","97","98"],"import React from \"react\";\nimport { List, Datagrid, Edit, Create, SimpleForm, TextField, DateField, TextInput, DateInput, NumberField, BooleanField } from 'react-admin';\n\n/* \n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column(\"varchar\", { length: 20, nullable: false })\n    uid: string;\n\n    @Column(\"varchar\")\n    name: string;\n\n    @Column(\"timestamp\")\n    time: Date\n\n    @Column(\"varchar\", { nullable: false, length: 20 })\n    door: string;\n*/\n\n\nexport const NewKeyList = (props) => (\n    <List {...props}>\n        <Datagrid>\n            <TextField source=\"uid\" />\n            <TextField source=\"door\" />\n            <TextField source=\"name\" />\n            <DateField source=\"time\" showTime locales=\"de\"/>\n        </Datagrid>\n    </List>\n);\n\n\n","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/reader/ReaderList.jsx",["99","100"],"// in src/comments.js\nimport * as React from 'react';\nimport { useListContext, List, TextField, DateField, ShowButton, Button, useNotify } from 'react-admin';\nimport { Card, CardActions, CardContent, CardHeader, Avatar } from '@material-ui/core';\nimport IconEvent from '@material-ui/icons/Event';\n\n\nconst cardStyle = {\n    width: 300,\n    minHeight: 250,\n    margin: '0.5em',\n    display: 'inline-block',\n    verticalAlign: 'top'\n};\n\n\nfunction ShowTimePassed({date}){\n    const parsedDate=new Date(date)\n    const oldDate=parsedDate instanceof Date? parsedDate : new Date();\n    const currenDate=new Date();\n    const difference=new Date(Math.abs(currenDate - oldDate)).getSeconds()\n\n    return <div>{difference} seconds ago</div>\n}\n\nconst ReaderGrid = () => {\n    const { ids, data, basePath } = useListContext();\n    const notify=useNotify();\n    \n    const openDoor=async(id)=>{\n        try {\n            const response=await fetch(`http://localhost:5000/opendoor/${id}`)\n            const json=await response.json();\n            notify(\"door opened\", \"info\")\n            console.log(json);\n        } catch (error) {\n            console.log(error)\n            notify(\"could not open door\", \"error\")\n\n        }\n    }\n\n    return (\n        <div style={{ margin: '1em' }}>\n        {ids.map(id =>\n            <Card key={id} style={cardStyle}>\n                <CardHeader\n                    title={<TextField record={data[id]} source=\"readerName\" />}\n                    subheader={<TextField record={data[id]} source=\"ip\"/>}\n                    /* avatar={<Avatar icon={<PersonIcon />} />} */\n                />\n                <CardContent>\n                    <DateField record={data[id]} source=\"lastPing\" showTime locales=\"de\"/>\n                    <ShowTimePassed date={data[id].lastPing}/>\n                </CardContent>\n                <CardActions style={{ textAlign: 'right' }}>\n                    <Button\n                        onClick={() => openDoor(id)}\n                        label=\"open\"\n                        variant=\"contained\"\n                    >\n                        <IconEvent />\n                    </Button>\n                    <ShowButton label=\"SHOW\" record={data[id]} variant=\"contained\" basePath=\"reader\"/>\n                </CardActions>\n            </Card>\n        )}\n        </div>\n    );\n};\n\nexport const ReaderList = (props) => (\n    <List title=\"All Readers\" {...props}>\n        <ReaderGrid />\n    </List>\n);\n\nexport default ReaderList","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/access/AccessList.jsx",["101","102","103","104","105","106"],"import * as React from \"react\";\nimport { List, Datagrid, Edit, Create, SimpleForm, TextField, DateField, TextInput, DateInput, NumberField, BooleanField } from 'react-admin';\n\n\n/* @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column(\"varchar\")\n    uid: string;\n\n    @Column(\"varchar\")\n    name: string;\n\n    @Column(\"bool\")\n    isKnown: boolean;\n\n    @Column(\"varchar\")\n    door: string;\n\n    @Column(\"varchar\", { length: 20, nullable: false })\n    type: string;\n\n    @Column(\"timestamp\")\n    time: Date; */\n\n\nexport const AccessList = (props) => (\n    <List {...props}>\n        <Datagrid>\n            <TextField source=\"uid\" />\n            <TextField source=\"name\" />\n            <TextField source=\"door\" />\n            <TextField source=\"type\" />\n            <TextField source=\"access\" />\n            <DateField source=\"time\" showTime locales=\"de\"/>\n            <BooleanField source=\"isKnown\" />\n        </Datagrid>\n    </List>\n);\n\nexport default AccessList","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/KeyActions.jsx",["107","108"],"import * as React from 'react';\nimport { cloneElement } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\n\nconst KeyActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n\n    const listContext = useListContext();\n\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n            <Button\n                onClick={() => {console.log(listContext)}}\n                label=\"Show calendar\"\n            >\n                <IconEvent />\n            </Button>\n        </TopToolbar>\n    );\n};\n\nexport default KeyActions",["109","110"],"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/dashboard/index.js",[],["111","112"],"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/AuthProvider.js",[],"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/reader/ReaderShow.jsx",["113"],"import React from 'react'\nimport { Toolbar, SaveButton, Create, SimpleForm, ReferenceInput, SelectInput, Datagrid, Show, SimpleShowLayout, TextField, DateField, ArrayField, BooleanField, CreateActions} from 'react-admin';\n\nconst KeyEditToolbar = props => (\n    <Toolbar {...props} >\n        <SaveButton />\n    </Toolbar>\n);\n\n\nconst ReaderShow = (props) => {\n    return (\n        <Show title=\" \"  {...props}>\n            <SimpleShowLayout>\n                <TextField source=\"readerName\" />\n                <TextField source=\"ip\" />\n                <DateField source=\"lastPing\" showTime locales=\"de\"/>\n                <Create resource={props.resource}>\n                    <SimpleForm toolbar={<KeyEditToolbar/>} margin=\"none\">\n                        <ReferenceInput reference=\"key\" source=\"key_id\"  allowEmpty>\n                            <SelectInput optionText=\"name\" />\n                        </ReferenceInput>\n                    </SimpleForm>\n                </Create>\n                <ArrayField source=\"keys\">\n                    <Datagrid>\n                        <TextField source=\"name\" />\n                        <TextField source=\"uid\" />\n                        <DateField source=\"validUntil\" showTime locales=\"de\"/>\n                        <BooleanField source=\"isOneTimeCode\" />\n                    </Datagrid>\n                </ArrayField>\n            </SimpleShowLayout>\n        </Show>\n    )\n}\n\nexport default ReaderShow\n","/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/key/KeyShow.jsx",[],"/home/dci-st118/Desktop/door/mqtt-door-access-control/client/src/components/reader/QuickCreateBox.jsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":96,"nodeType":"120","messageId":"121","endLine":3,"endColumn":107},{"ruleId":"118","severity":1,"message":"122","line":3,"column":123,"nodeType":"120","messageId":"121","endLine":3,"endColumn":133},{"ruleId":"118","severity":1,"message":"123","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":3,"column":16,"nodeType":"120","messageId":"121","endLine":3,"endColumn":24},{"ruleId":"118","severity":1,"message":"125","line":3,"column":26,"nodeType":"120","messageId":"121","endLine":3,"endColumn":30},{"ruleId":"118","severity":1,"message":"126","line":3,"column":52,"nodeType":"120","messageId":"121","endLine":3,"endColumn":61},{"ruleId":"118","severity":1,"message":"127","line":3,"column":63,"nodeType":"120","messageId":"121","endLine":3,"endColumn":72},{"ruleId":"118","severity":1,"message":"128","line":3,"column":85,"nodeType":"120","messageId":"121","endLine":3,"endColumn":94},{"ruleId":"118","severity":1,"message":"119","line":3,"column":96,"nodeType":"120","messageId":"121","endLine":3,"endColumn":107},{"ruleId":"118","severity":1,"message":"129","line":3,"column":109,"nodeType":"120","messageId":"121","endLine":3,"endColumn":121},{"ruleId":"118","severity":1,"message":"125","line":2,"column":26,"nodeType":"120","messageId":"121","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"130","line":2,"column":32,"nodeType":"120","messageId":"121","endLine":2,"endColumn":38},{"ruleId":"118","severity":1,"message":"131","line":2,"column":40,"nodeType":"120","messageId":"121","endLine":2,"endColumn":50},{"ruleId":"118","severity":1,"message":"132","line":2,"column":74,"nodeType":"120","messageId":"121","endLine":2,"endColumn":83},{"ruleId":"118","severity":1,"message":"128","line":2,"column":85,"nodeType":"120","messageId":"121","endLine":2,"endColumn":94},{"ruleId":"118","severity":1,"message":"119","line":2,"column":96,"nodeType":"120","messageId":"121","endLine":2,"endColumn":107},{"ruleId":"118","severity":1,"message":"129","line":2,"column":109,"nodeType":"120","messageId":"121","endLine":2,"endColumn":121},{"ruleId":"118","severity":1,"message":"125","line":2,"column":26,"nodeType":"120","messageId":"121","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"130","line":2,"column":32,"nodeType":"120","messageId":"121","endLine":2,"endColumn":38},{"ruleId":"118","severity":1,"message":"131","line":2,"column":40,"nodeType":"120","messageId":"121","endLine":2,"endColumn":50},{"ruleId":"118","severity":1,"message":"132","line":2,"column":74,"nodeType":"120","messageId":"121","endLine":2,"endColumn":83},{"ruleId":"118","severity":1,"message":"128","line":2,"column":85,"nodeType":"120","messageId":"121","endLine":2,"endColumn":94},{"ruleId":"118","severity":1,"message":"119","line":2,"column":96,"nodeType":"120","messageId":"121","endLine":2,"endColumn":107},{"ruleId":"118","severity":1,"message":"129","line":2,"column":109,"nodeType":"120","messageId":"121","endLine":2,"endColumn":121},{"ruleId":"118","severity":1,"message":"133","line":4,"column":54,"nodeType":"120","messageId":"121","endLine":4,"endColumn":60},{"ruleId":"118","severity":1,"message":"134","line":27,"column":24,"nodeType":"120","messageId":"121","endLine":27,"endColumn":32},{"ruleId":"118","severity":1,"message":"125","line":2,"column":26,"nodeType":"120","messageId":"121","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"130","line":2,"column":32,"nodeType":"120","messageId":"121","endLine":2,"endColumn":38},{"ruleId":"118","severity":1,"message":"131","line":2,"column":40,"nodeType":"120","messageId":"121","endLine":2,"endColumn":50},{"ruleId":"118","severity":1,"message":"132","line":2,"column":74,"nodeType":"120","messageId":"121","endLine":2,"endColumn":83},{"ruleId":"118","severity":1,"message":"128","line":2,"column":85,"nodeType":"120","messageId":"121","endLine":2,"endColumn":94},{"ruleId":"118","severity":1,"message":"119","line":2,"column":96,"nodeType":"120","messageId":"121","endLine":2,"endColumn":107},{"ruleId":"118","severity":1,"message":"135","line":26,"column":9,"nodeType":"120","messageId":"121","endLine":26,"endColumn":18},{"ruleId":"118","severity":1,"message":"136","line":28,"column":9,"nodeType":"120","messageId":"121","endLine":28,"endColumn":20},{"ruleId":"114","replacedBy":"137"},{"ruleId":"116","replacedBy":"138"},{"ruleId":"114","replacedBy":"139"},{"ruleId":"116","replacedBy":"140"},{"ruleId":"118","severity":1,"message":"141","line":2,"column":162,"nodeType":"120","messageId":"121","endLine":2,"endColumn":175},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'NumberField' is defined but never used.","Identifier","unusedVar","'ShowButton' is defined but never used.","'List' is defined but never used.","'Datagrid' is defined but never used.","'Edit' is defined but never used.","'TextField' is defined but never used.","'DateField' is defined but never used.","'DateInput' is defined but never used.","'BooleanField' is defined but never used.","'Create' is defined but never used.","'SimpleForm' is defined but never used.","'TextInput' is defined but never used.","'Avatar' is defined but never used.","'basePath' is assigned a value but never used.","'hasCreate' is assigned a value but never used.","'selectedIds' is assigned a value but never used.",["142"],["143"],["142"],["143"],"'CreateActions' is defined but never used.","no-global-assign","no-unsafe-negation"]